{"version":3,"sources":["assets/GC_logo.svg","assets/ITN_logo.svg","assets/shid_emozhl_logo.svg","logo.svg","assets/facts-slider/slide-1.jpg","assets/facts-slider/slide-2.jpg","assets/facts-slider/slide-3.jpg","assets/facts-slider/slide-4.jpg","assets/facts-slider/slide-5.jpg","assets/sectors/industry.jpg","assets/sectors/transport.jpg","assets/sectors/cityes.jpg","assets/sectors/energy.jpg","assets/sectors/energetics.jpg","assets/sectors/rubbish.jpg","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/AirQuality/AirQuality.js","components/SectorLists/SectorItem.js","components/SectorLists/SectorList.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","bgImg","title","links","LogosImages","logos","map","itemlogo","src","alt","className","navItems","link","href","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slide","key","id","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","spaceBetween","slidesPerView","loopFillGroupWithBlank","mapboxgl","accessToken","AirQuality","mapContainer","useRef","useState","lng","lat","zoom","locationInfo","useEffect","Map","container","current","style","center","ref","SectorItem","sector","number","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","background","backgroundSize","name","description","SectorList","subtitle","itemsList","items","i","Footer","partners","author","design","partnersLogos","logo","navLinks","App","shidLogo","itnLogo","gcLogo","factSlides","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a1129161.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GC_logo.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN_logo.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_emozhl_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide-1.12aa92fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-2.b45b30f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-3.af20b6d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-4.101bcc21.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-5.72897be0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/industry.3d66b58c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/transport.fb06d4dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cityes.a3fe3aa1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.17b056bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energetics.1d9ae9e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rubbish.8535babf.jpg\";","import React from 'react';\r\nimport './HeroBlock.scss';\r\n\r\nconst HeroBlock = ({bgImg, title, links, logos}) => {\r\n   const LogosImages = logos.map((itemlogo) => <img src={itemlogo} alt=\"partner-logo\" className=\"hero-partners-item\"/>);\r\n   const navItems = links.map((link) => <a href={link.href} className=\"hero-nav-item\">{link.title}</a>);\r\n    return (\r\n        <section className=\"hero\">\r\n        <div className=\"container\"> \r\n             <div className=\"hero-partners\">\r\n                {LogosImages}\r\n             </div>   \r\n             <nav className=\"hero-nav\">\r\n             {navItems}\r\n\r\n             </nav>\r\n\r\n    <h1 className=\"hero-title\">{title}</h1>\r\n\r\n             <a href=\"#\" className=\"hero-link\">Отследить</a>\r\n        </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HeroBlock;","import React from 'react';\r\n\r\nconst SlideFacts =({item}) => {\r\n    return (\r\n        <div className=\"facts-slide\">\r\n            <img src={item.imgUrl} alt=\"slide image\"/>\r\n    <p className=\"facts-slide-desc\">{item.desc}</p>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts\";\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport './Facts.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\n\r\nSwiperCore.use([Navigation, Pagination])\r\n\r\nconst Facts = ({title, slides}) => {\r\n    const factsSlides = slides.map((slide) => <SwiperSlide>\r\n         <SlideFacts item={slide} key={slide.id}/>\r\n         </SwiperSlide>);\r\n\r\n    return (\r\n    <section className=\"facts container\"> \r\n    <h2 className=\"facts-title\">{title}</h2>\r\n        <div className=\"swiper-button-prev\" />\r\n        <Swiper \r\n        navigation={{\r\n            nextEl: '.swiper-button-next',\r\n            prevEl: '.swiper-button-prev',\r\n        }}\r\n        pagination={{\r\n            el: '.facts-pagination',\r\n            clickable: true,\r\n\t\t\trenderBullet: function (index, className) {\r\n                return `<span class=\"facts-pagination-bullet ${className}\"></span>`;\r\n            },\r\n        }}\r\n        spaceBetween={40}\r\n        slidesPerView={3}\r\n        //loop={true}\r\n        loopFillGroupWithBlank={true}\r\n        >\r\n        {factsSlides}\r\n\r\n        </Swiper>\r\n        <div className=\"swiper-button-next\" />\r\n        <div className=\"facts-pagination\" />\r\n\r\n    </section>\r\n        );\r\n     };\r\n\r\n     export default Facts;","import React, { useEffect, useRef, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './AirQuality.scss'\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoicGlvbmVyc2ciLCJhIjoiY2tmcDF3bDM4MDEzajMzcnBlOGI5bjZyZiJ9.IoAM0XvyDkC0ifIOCzEXQQ';\r\n\r\nconst AirQuality = () => {\r\n\r\n    const mapContainer = useRef(null);\r\n    \r\n    const [locationInfo, setLocationInfo] = useState( {\r\n\t\tlng: 31,\r\n\t\tlat: 48.55,\r\n\t\tzoom: 5\r\n    });\r\n\r\n    useEffect(() => {\r\n\t\tconst map = new mapboxgl.Map({\r\n\t\t\tcontainer: mapContainer.current,\r\n\t\t\tstyle: 'mapbox://styles/mapbox/outdoors-v11',\r\n\t\t\tcenter: [locationInfo.lng, locationInfo.lat],\r\n\t\t\tzoom: locationInfo.zoom\r\n\t\t});\r\n\t}, [])\r\n\r\n    return (\r\n        <section className=\"air-q container\">\r\n            <h2 className=\"air-q-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n            <div className=\"air-q-map\" ref={mapContainer}/>\r\n            <p className=\"air-q-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AirQuality;","import React, { useState } from 'react';\r\n\r\nconst SectorItem = ({sector, number}) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false);\r\n    const toggleToolTip = (newValue) => {\r\n        if (number % 3 === 0) {\r\n            setDirectionSwitched(true)\r\n        } else {\r\n            setDirectionSwitched(false)\r\n        }\r\n\r\n        setToolTipShowing(newValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sectors-list-item\" \r\n            onMouseEnter={() => toggleToolTip(true)}\r\n            onMouseLeave={() => toggleToolTip(false)}\r\n        style={{\r\n            background: `url(${sector.imgUrl}) center no-repeat`,\r\n            backgroundSize: 'cover'\r\n                                                \r\n    }}>\r\n        <p className=\"sectors-list-item-name\">\r\n            {sector.name}\r\n        </p>\r\n        {\r\n        isToolTipShowing && <p className={`sectors-list-item-tooltip ${\r\n            isDirectionSwitched \r\n                    ? \"sectors-list-item-tooltip-switched\"\r\n                    : \"\"\r\n\r\n        }`}>\r\n            {sector.description}\r\n        </p>\r\n        }\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default SectorItem; ","import React from 'react';\r\nimport \"./SectorList.scss\";\r\nimport SectorItem from \"./SectorItem\";\r\n\r\nconst SectorList = ({title, subtitle, items}) => {\r\n    const itemsList = items.map((sector, i) => <SectorItem sector={sector} number={i+1} key={i} />)\r\n\r\n    return (\r\n        <section className=\"sectors container\">\r\n            <h2 className=\"sectors-title\">{title}</h2>\r\n            <p className=\"sectors-subtitle\">{subtitle}</p>\r\n            <div className=\"sectors-list\"> {itemsList}\r\n                   </div>\r\n\r\n        </section>\r\n\r\n    );\r\n};\r\n\r\nexport default SectorList;","import React from 'react';\r\nimport './Footer.scss';  \r\n\r\nconst Footer = ({partners, links, author, design}) => {\r\n    const partnersLogos = partners.map((logo, i) => <img key={i} src={logo} alt={'partner logo'} className=\"footer-partners-item\" /> )\r\n    \r\n    const navLinks = links.map((link, i) => <a href={link.href} key={i} className={'footer-nav-link'}>{link.title} </a>)\r\n    \r\n    return (\r\n\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n            <div className=\"footer-partners\"> {partnersLogos} </div>\r\n\r\n            <div className=\"footer-text-wrap\">\r\n            <div className=\"footer-nav\">\r\n                {navLinks}\r\n\r\n            </div>\r\n    <p className=\"footer-nav-text\">Сайт был разработан <span className=\"text-yellow\">{author}</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">{design}.</span> </p>\r\n\r\n        </div>\r\n\r\n        <p className=\"footer-text\">2020, Все права защищены</p>\r\n\r\n        <p className=\"footer-text\">Согласие на обработку персональных данных <br/>Политика конфиденциальности</p>\r\n\r\n            </div>\r\n\r\n\r\n        </footer>\r\n    );\r\n\r\n    \r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport HeroBlock from \"./components/HeroBlock/HeroBlock\";\nimport Facts from \"./components/Facts/Facts\";\nimport AirQuality from \"./components/AirQuality/AirQuality\";\nimport SectorLists from \"./components/SectorLists/SectorList\";\nimport Footer from \"./components/Footer/Footer\";\nimport gcLogo from \"./assets/GC_logo.svg\";\nimport itnLogo from \"./assets/ITN_logo.svg\";\nimport shidLogo from \"./assets/shid_emozhl_logo.svg\"; \n\nfunction App() {\n  const partners = [\n    shidLogo,\n    itnLogo,\n    gcLogo\n     ]\n\n     const navLinks = [\n       {\n         title: \"Основные факты\",\n         href: \"#facts\"\n       },\n       {\n        title: \"Индекс качества воздуха\",\n        href: \"#index\"\n      },\n      {\n        title: \"Политика по уменьшению загрязнений\",\n        href: \"#policy\"\n      }\n     ]\n\n     const factSlides = [\n       {\n         id: '1332',\n         imgUrl: require(\"./assets/facts-slider/slide-1.jpg\"),\n         desc: 'Женщины и дети – главные жертвы загрязнения воздуха',\n       },\n       {\n        id: '1333',\n        imgUrl: require(\"./assets/facts-slider/slide-2.jpg\"),\n        desc: 'Защитники окружающей среды подвергаются преследованиям',\n      },\n      {\n        id: '1334',\n        imgUrl: require(\"./assets/facts-slider/slide-3.jpg\"),\n        desc: 'Загрязнение воздуха – нарушение прав человека',\n      },\n      {\n        id: '1335',\n        imgUrl: require(\"./assets/facts-slider/slide-4.jpg\"),\n        desc: '4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха',\n      },\n      {\n        id: '1336',\n        imgUrl: require(\"./assets/facts-slider/slide-5.jpg\"),\n        desc: 'Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.',\n      },\n     ]\n     \n     const sectors = [\n       {\n         name: \"Промышленность\",\n         description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\",\n         imgUrl: require(\"./assets/sectors/industry.jpg\")         \n        },\n        {\n          name: \"Транспорт\",\n          description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\",\n          imgUrl: require(\"./assets/sectors/transport.jpg\")            \n         },\n         {\n          name: \"Городское планирование\",\n          description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\",\n          imgUrl: require(\"./assets/sectors/cityes.jpg\")             \n         },\n         {\n          name: \"Энергия\",\n          description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\",\n          imgUrl: require(\"./assets/sectors/energy.jpg\")             \n         },\n         {\n          name: \"Энергетика\",\n          description: \" Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\",\n          imgUrl: require(\"./assets/sectors/energetics.jpg\")             \n         },\n         {\n          name: \"Утилизация отходов\",\n          description: \"Cтратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\",\n          imgUrl: require(\"./assets/sectors/rubbish.jpg\")             \n         },\n\n     ]\n\n     const author = \"Владимиром Метёлкиным\";\n     const design = \"Валерией Бубырь\";\n  \n     return (\n    <>\n      <HeroBlock title=\"Качество атмосферного воздуха и здоровье\" \n      logos={partners} \n      links={navLinks}/>\n\n      <Facts title=\"Основые факты\"slides={factSlides}/>\n      <AirQuality />\n      <SectorLists \n            title=\"Политика по уменьшению загрязнений\" \n            subtitle=\"Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.\"\n            items={sectors}\n            />\n            \n\n            <Footer links={navLinks} partners={partners} author={author} design={design} />\n            \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}